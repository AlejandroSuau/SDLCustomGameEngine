CMAKE_MINIMUM_REQUIRED(VERSION 3.14)

PROJECT(SDLCustomGameEngine)

SET(CMAKE_CXX_STANDARD 20)
SET(CMAKE_CXX_REQUIRED ON)

INCLUDE_DIRECTORIES(include)

LINK_DIRECTORIES(lib/SDL2)

ADD_SUBDIRECTORY(src)

ADD_EXECUTABLE(${PROJECT_NAME} main.cpp)

set(ASSETS_SOURCE_DIR "${CMAKE_SOURCE_DIR}/assets")
set(ASSETS_DEST_DIR "${CMAKE_BINARY_DIR}/assets")
add_custom_command(
    TARGET ${PROJECT_NAME} POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy_directory
    ${ASSETS_SOURCE_DIR} ${ASSETS_DEST_DIR}
)

if (WIN32)
    ADD_CUSTOM_COMMAND(
        TARGET ${PROJECT_NAME} POST_BUILD
        COMMAND ${CMAKE_COMMAND} -E copy_if_different
        "${CMAKE_SOURCE_DIR}/lib/SDL2/SDL2.dll"
        $<TARGET_FILE_DIR:${PROJECT_NAME}>
    )
    
    ADD_CUSTOM_COMMAND(
        TARGET ${PROJECT_NAME} POST_BUILD
        COMMAND ${CMAKE_COMMAND} -E copy_if_different
        "${CMAKE_SOURCE_DIR}/lib/SDL2/SDL2_image.dll"
        $<TARGET_FILE_DIR:${PROJECT_NAME}>
    )
endif()

TARGET_LINK_LIBRARIES(
    ${PROJECT_NAME}
    engine
    SDL2main
    SDL2
    SDL2_image)

# Establecer las arquitecturas para compilar un binario universal
SET(CMAKE_OSX_ARCHITECTURES "x86_64;arm64")
